html {
    --concept-hue: 207;
    --activity-hue: 112;
    --representation-hue: 56;
    --course-hue: 360;

    --concept-color: hsl(var(--concept-hue), 100%, 90%);
    --activity-color: hsl(var(--activity-hue), 100%, 90%);
    --representation-color: hsl(var(--representation-hue), 100%, 90%);
    --course-color: hsl(var(--course-hue), 100%, 90%);

    --orphan-color: hsl(var(--course-hue), 100%, 50%);

    --hover-concept-color: hsl(var(--concept-hue), 100%, 80%);
    --hover-activity-color: hsl(var(--activity-hue), 100%, 80%);
    --hover-representation-color: hsl(var(--representation-hue), 100%, 80%);
    --hover-course-color: hsl(var(--course-hue), 100%, 80%);

    --prereq-course-color: #999;
    --all-prereq-color: #ddd;

    --time-arrow-color: hsl(var(--course-hue), 100%, 90%);

    --minwidth: 10em;
    --imgheight: 1.5em;
    --activity-padding: 0.6em;
    --border-width: 0.1em;
}

html {
    --menu-color: var(--prereq-course-color);
    --left-arrows-color: hsl(var(--concept-hue), 100%, 70%);
    --right-arrows-color: hsl(var(--activity-hue), 80%, 75%);
}

/* ul li{display:block;position:relative;float:left;margin:0;height:2em;} */
/* ul li a{height:2em;padding-right:0.25em;padding-left:0.25em; */
/*         border-right:.1em solid #000; */
/*         border-left:.2em solid $menuback; */
/*        } */

nav ul {
    margin: -1em -2em 0 -2em;
    padding: 3em 2em 2em -.25em;
    padding-top: 1em;
    list-style-type:none;
    display:block;
    font-weight:bold;
    line-height:165%;
    width:100%;
    background-color: var(--menu-color);
}
nav ul:after {
    content: ".";
    color: transparent;
    clear: left;
}
nav ul li{
    position: relative;
    float: left;
    margin:0;
    padding-left:0.5em;
    padding-right:0.5em;
    /* border-top:.15em solid var(--concept-color); */
    /* border-bottom:.15em solid var(--concept-color); */
    /* border-left: 0.1em solid var(--concept-color); */
    /* border-right: 0.2em solid var(--concept-color); */
}

#arrows-svg {
    z-index: 10;
    position:absolute;
    pointer-events: none;
}
#left-arrows {
    stroke: var(--left-arrows-color);
}
#right-arrows {
    stroke: var(--right-arrows-color);
}

a, a:link, a:active, a:hover {
    text-decoration: none;
    color: black;
}

.activity {
    grid-column: main;
    display: block;
    background-color: var(--activity-color);
    margin: 0.5em;
    padding: var(--activity-padding);
    border-radius: 2em 2em 0 0;
    border-width: var(--border-width);
    border-color: black;
    border-style: solid;
    text-align: center;
    flex-grow: 1;
    flex-shrink: 1;
}

.concept {
    grid-column: main;
    background-color: var(--concept-color);
    margin: 0.25em;
    padding: 0.5em;
    text-align: justify;
    border-width: var(--border-width);
    border-color: black;
    border-style: solid;
    overflow: hidden;
    min-width: var(--minwidth);
    flex-grow: 1;
    flex-shrink: 1;
    flex-basis: var(--minwidth);
    /* flex-basis: auto; */
}

.course {
    font-weight: bold;
    background-color: var(--course-color);
    padding: 0 0.75em 0 0.75em;
    border-radius: 10em;
    border-width: var(--border-width);
    border-color: black;
    border-style: solid;
}

.representation:hover {
    background-color: var(--hover-representation-color);
}
.activity:hover {
    background-color: var(--hover-activity-color);
}
.concept:hover {
    background-color: var(--hover-concept-color);
}
.course:hover {
    background-color: var(--hover-course-color);
}

.representation {
    grid-column: right;
    overflow: hidden;
    background-color: var(--representation-color);
    /* max-height: calc(2*var(--imgheight)); */

    display: flex;
    justify-content: center;
    align-items: center;

    clear: right;
    float: right;
    padding: 0.25em 0.5em 0.25em 0.5em;
    border-radius: 10em;
    justify-self: center;
    border-width: var(--border-width);
    border-color: black;
    border-style: solid;

    margin: 0.25em 0.25em 0.125em 0.25em;
    /* flex-grow: 1; */
    /* flex-shrink: 1; */
    /* flex-basis: var(--minwidth); */
}

.description {
    text-align: justify;
    grid-column: main;
    width: 100%;
    min-height: 10vh;
}

/* .representation:nth-child(odd) { */
/*     clear: left; */
/*     float: left; */
/* } */

article {
    display: flex;
    flex-wrap: wrap;
}

.course-prereq {
    margin: 1em 0.5em 0.5em 0.5em;
    padding: 0;
    /* line-height: 165%; why did I do this? */
    background-color: var(--prereq-course-color);
    padding: 0.25em;
    border-radius: 0.5em;

    position: relative;

    display: flex;
    flex-wrap: wrap;

    flex-grow: 1;
    flex-shrink: 1;
    flex-basis: var(--minwidth);
}

.course-prereq .course {
    position: absolute;
    top: -1.2em;
    left: 2em;
}

.course-prereq .concept {
    display: block;
}

.prereq {
    display: flex;
    flex-wrap: wrap;
    flex-basis: 100%;
}

details.allprereqs {
    padding: 0.5em;
    margin: 0.5em;
    border-radius: 0.5em;
    background-color: var(--all-prereq-color);
    display: block;
    flex-basis: 100%;
}
div.allprereqs {
    display: flex;
    flex-wrap: wrap;
    flex-basis: 100%;
}

.allprereqs summary {
    font-weight: bold;
    outline: none;
    flex-basis: 100%;
    margin: 0 0 0.5em 0;
}

.output {
    display: flex;
    flex-wrap: wrap;
    flex-basis: 100%;
}

.activity-grouping {
    position: relative;

    margin-top: 3em;
    display: flex;
    flex-wrap: wrap;
    flex-grow: 1;
    flex-shrink: 1;
    flex-basis: var(--minwidth);
}

.activity-grouping .activity {
    position: absolute;
    top: .5em;
    height: 1.2em;
    left: 1em;
}

.activity-grouping .concept {
    display: block;
    width: 1fr;
    z-index: 1;
    margin-top: 0;
}

article > .activity {
    position: relative;
    padding: 0 .25em .25em .25em;
    text-align: center;
    display: block;
    flex-wrap: wrap;
    flex-basis: 100%;
    grid-template-columns: [left] minmax(var(--minwidth), 1fr) [main] 3fr [right] minmax(var(--minwidth), 1fr);
}

article > .representation {
    border-radius: 3em;
    overflow: visible;
    position: relative;
    padding: 0 1em 1em 1em;
    margin: 0;
    display: block;
    flex-wrap: wrap;
    flex-basis: 100%;
    grid-template-columns: [left] minmax(var(--minwidth), 1fr) [main] 3fr [right] minmax(var(--minwidth), 1fr);
    text-align: justify;
    --imgheight: 10em;
}

article > .representation h1 {
    padding: 1em;
    float: left;
}
article > .representation figure {
    margin: 1em;
    float: right;
    clear: right;
}
article > .representation figure:nth-child(odd) {
    float: left;
    clear: left;
}
figure img {
    height: auto;
    width: 30vw;
}

article > .representation h1 {
    text-align: center;
    margin: 0.5em 0 -1em 0;
}

article > .representation:hover {
    background-color: var(--representation-color);
}
article > .concept:hover {
    background-color: var(--concept-color);
}

article > .concept {
    overflow: visible;
    position: relative;
    padding: 0 .25em .25em .25em;
    margin: 3em 1em 1em 1em;
    text-align: center;
    /* display: flex; */
    /* flex-wrap: wrap; */
    flex-basis: 100%;
}

article > .concept .concept {
    top: 0;
    left: 0;
    right: 0;
    margin: auto;
    font-weight: bold;
    font-size: 1.5em;
    background-color: transparent;
    border-style: none;
    flex-basis: 100%;
    flex-grow: 1;
    flex-shrink: 0;
}

.taughtby {
    position: absolute;
}

/* The following pair of taughtby is a trick (hopefully correct) to
   align the *bottom* of the activities with the *top* of the
   surrounding element.  I couldn't come up with a better way than
   putting two containers in between. */
article > .concept > .taughtby, .activity-grouping > .taughtby {
    top: 0;
    left: 0;
    height: 0.01em;
    width: 100%;
    background-color: transparent;
}
article > .concept .taughtby > .taughtby, .taughtby > .taughtby  {
    bottom: 0.01em;
    top: auto;
    left: 0;
    height: auto;
    width: auto;
    background-color: transparent;
}
.taughtby > .taughtby .activity {
    position: relative;
    display: inline-block;
    top: auto;
    bottom: 0;
    border-bottom: none;
    margin: 0 0 0 1em;
}
.concept > .taughtby > .taughtby .activity {
    bottom: calc(1*var(--border-width));
}

/* article > .activity .activity:before { */
/*     position:absolute; */
/*     width: 0; */
/*     height: 0; */
/*     border-left: 45vw solid transparent; */
/*     border-right: 45vw solid transparent; */
/*     border-top: 5em solid var(--time-arrow-color); */
/*     content: ""; */
/*     bottom: 2em; */
/*     left: 0; */
/*     right: 0; */
/*     margin: auto; */
/*     z-index: -2; */
/* } */
/* article > .activity .activity:after { */
/*     position:absolute; */
/*     width: 40vw; */
/*     height: 100vh; */
/*     background-color: var(--time-arrow-color); */
/*     content: ""; */
/*     bottom: 7em; */
/*     left: 0; */
/*     right: 0; */
/*     margin: auto; */
/*     z-index: -2; */
/* } */

/* article > .concept .concept:before { */
/*     position:absolute; */
/*     width: 0; */
/*     height: 0; */
/*     border-left: 45vw solid transparent; */
/*     border-right: 45vw solid transparent; */
/*     border-top: 5em solid var(--time-arrow-color); */
/*     content: ""; */
/*     bottom: 2.5em; */
/*     left: 0; */
/*     right: 0; */
/*     margin: auto; */
/*     z-index: -2; */
/* } */
/* article > .concept .concept:after { */
/*     position:absolute; */
/*     width: 40vw; */
/*     height: 100vh; */
/*     background-color: var(--time-arrow-color); */
/*     content: ""; */
/*     bottom: 7em; */
/*     left: 0; */
/*     right: 0; */
/*     margin: auto; */
/*     z-index: -2; */
/* } */

.activity .representation {
    float: none;
    width: auto;
}

.row {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;
    --imgheight: 6em;
}

.row .representation {
    height: calc(var(--imgheight)+1em);
    padding: 1em;
}

.has1, .has3, .has2, .has4 {
    flex-grow: 1;
    flex-shrink: 1;
    flex-basis: var(--minwidth);
}

img {
    height: var(--imgheight);
}

.activity .activity {
    left: 0;
    right: 0;
    margin: auto;
    background-color: transparent;
    border-style: none;
    flex-basis: 100%;
    flex-grow: 1;
    flex-shrink: 0;
}

article > .activity .activity {
    top: 0;
    font-weight: bold;
    font-size: 1.5em;
    flex-basis: auto;
}
article > .activity {
    --imgheight: 10em;
}
article > .concept {
    --imgheight: 6em;
}

.figure {
    float: left;
    grid-column: left;
    padding: .5em;
    object-fit: contain;
    width: 20em;
    max-width: 50%;
    height: auto;
    flex-basis: 1em;
    flex-shrink: 1;
    flex-grow: 1;
}

.middle {
    flex-basis: 30em;
    flex-grow: 5;
    flex-shrink: 1;
}

.right {
    flex-basis: 10em;
    flex-shrink: 5;
}

.progression {
    padding-top: 2em;
    flex-basis: 100%;

    display: flex;
    flex-wrap: wrap;
}

.progression .course {
    flex-grow: 0;
    flex-basis: content;
    font-size: 2em;
    margin-left: auto;
    margin-right: auto;
    margin-top: 1em;
}

.progression .activity-grouping {
    flex-basis: 100%;

    margin: 0.5em 0 0 0;
    padding: 0;

    display: grid;
    grid-template-columns: [actions] minmax(var(--minwidth), 1fr) 1fr [concepts] minmax(var(--minwidth), 3fr);
}
.progression .activity-grouping > .activity .activity {
    position: static;
    height: auto;
    padding: .125em;
}
.progression .activity-grouping > .activity {
    grid-column: actions;
    position: relative;
    height: auto;
    min-height: 1em;
    padding: 0;
    margin: 0;

    align-self: start;

    display: flex;
    flex-wrap: wrap;
}
.progression .activity-grouping .concepts {
    grid-column: concepts;
    display: block;

    position: relative;
    top: 2em;
}
.progression .activity-grouping > .activity {
    position: relative;
    top: 0em;
}

.rownum {
    font-size: 0.75em;
    border-radius: 100%;
    padding: 0.25em;
    float: right;
}
.concept.hint {
    border-style: dotted;
    border-width: 0.25em;
    /* display: none !important; */
}
.orphans {
    background-color: var(--orphan-color);
}

form, form.concept {
    position: relative;

    display: flex;
    flex-wrap: wrap;
    flex-grow: 1;
    flex-shrink: 1;
    flex-basis: var(--minwidth);
}

.Remove {
    color: red;
}
.Add {
    color: blue;
}
form.addremove {
    float: right;
}

.has0 .has1 .has3, .has2, .has4,.has5,.has6,.has7,.has8,.has9,.has10,.has11,.has12,.has13,.has14,.has15,.has16,.has17,.has18,.has19,.has20 {
    flex-grow: 1;
    flex-shrink: 1;
    flex-basis: calc(1*var(--minwidth));
}

@media only screen and (min-width: 24em) {
    .has3, .has2, .has4,.has5,.has6,.has7,.has8,.has9,.has10,.has11,.has12,.has13,.has14,.has15,.has16,.has17,.has18,.has19,.has20 {
        flex-grow: 2;
        flex-shrink: 2;
        flex-basis: calc(2*var(--minwidth));
    }
}

@media only screen and (min-width:  36em) {
    .has3, .has4,.has5,.has6,.has7,.has8,.has9,.has10,.has11,.has12,.has13,.has14,.has15,.has16,.has17,.has18,.has19,.has20 {
        flex-grow: 3;
        flex-shrink: 3;
        flex-basis: 3*var(--minwidth);
    }
}

@media only screen and (min-width: 48em) {
    .has4,.has5,.has6,.has7,.has8,.has9,.has10,.has11,.has12,.has13,.has14,.has15,.has16,.has17,.has18,.has19,.has20 {
        flex-grow: 4;
        flex-shrink: 4;
        flex-basis: calc(4*var(--minwidth));
    }
}

@media only screen and (min-width: 60em) {
    .has5,.has6,.has7,.has8,.has9,.has10,.has11,.has12,.has13,.has14,.has15,.has16,.has17,.has18,.has19,.has20 {
        flex-grow: 5;
        flex-shrink: 5;
        flex-basis: calc(5*var(--minwidth));
    }
}

@media only screen and (min-width: 72em) {
    .has6,.has7,.has8,.has9,.has10,.has11,.has12,.has13,.has14,.has15,.has16,.has17,.has18,.has19,.has20 {
        flex-grow: 6;
        flex-shrink: 6;
        flex-basis: calc(6*var(--minwidth));
    }
}
